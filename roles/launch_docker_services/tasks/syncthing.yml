---

- name: Installing Ansible XML module dependencies
  become: yes
  apt: { name: python-lxml }
- name: Getting user uid
  command: "id -u {{ username }}"
  register: uid
  changed_when: no
- name: Getting user gid
  command: "id -g {{ username }}"
  register: gid
  changed_when: no
- name: Getting local username
  delegate_to: localhost
  command: whoami
  register: local_username
  changed_when: no
- name: Getting local hostname
  delegate_to: localhost
  command: hostname
  register: local_hostname
  changed_when: no
- name: Getting local host device id
  delegate_to: localhost
  command: syncthing -device-id
  register: local_device_id
  changed_when: no
- name: Getting path to local host config file
  delegate_to: localhost
  shell: "syncthing -paths | grep config.xml | awk '{ print $1 }'"
  register: local_config_path
  changed_when: no
- name: Getting local host API key
  delegate_to: localhost
  xml:
    path: "{{ local_config_path.stdout }}"
    xpath: "/configuration/gui/apikey"
    content: text
  register: local_host_api_key
  changed_when: no
- name: Getting local host folders
  delegate_to: localhost
  shell: "curl --silent --insecure --header \"X-API-Key: {{ local_host_api_key.matches[0].apikey }}\" https://localhost:8384/rest/system/config | jq '.folders[] | .label + \":\" + .id' | sed 's/\"\\(.*\\)\"/\\1/'"
  args:
    warn: no
  register: local_folders
  changed_when: no

- name: Launching syncthing
  docker_service:
    project_name: syncthing
    definition:
      version: "2"
      services:
        syncthing:
          image: linuxserver/syncthing
          container_name: syncthing
          networks:
            - nginxproxy_default
          environment:
            PUID: "{{ uid.stdout }}"
            PGID: "{{ gid.stdout }}"
            TZ: "{{ timezone }}"
            UMASK_SET: <022>
            STNODEFAULTFOLDER: "true"
            VIRTUAL_HOST: syncthing.ryanlue.com
            VIRTUAL_PORT: 8384
            LETSENCRYPT_HOST: syncthing.ryanlue.com
            LETSENCRYPT_EMAIL: hello@ryanlue.com
          volumes:
            - "/home/{{ username }}/.local/etc/syncthing:/config"
            - "/media/data/{{ local_username.stdout }}:/{{ local_username.stdout }}"
          ports:
            - 8384:8384
            - 22000:22000
            - 21027:21027/udp
          restart: unless-stopped
      networks:
        nginxproxy_default:
          external: true

- name: Setting owner on sync directory
  become: yes
  file:
    path: "/media/data/{{ local_username.stdout }}"
    state: directory
    owner: "{{ username }}"

- name: Waiting for syncthing to generate config file
  wait_for:
    path: .local/etc/syncthing/config.xml
  changed_when: no

- name: Getting remote host device id
  command: docker exec syncthing syncthing -home=/config -device-id
  register: remote_device_id
  changed_when: no

# NOTE: This task _must_ come first;
# it will rewrite any other changes to the config file.
- name: Linking local host in remote device list
  syncthing_device:
    id: "{{ local_device_id.stdout }}"
    name: "{{ local_hostname.stdout }}"
  register: add_local_device

- name: Configuration local host as introducer
  xml:
    path: .local/etc/syncthing/config.xml
    xpath: "/configuration/device[@id=\"{{ local_device_id.stdout }}\"]"
    attribute: introducer
    value: "true"
  register: introducer

- name: Restarting syncthing
  docker_container:
    name: syncthing
    state: started
    restart: yes
  when: add_local_device.changed or introducer.changed

- name: Adding local folders to remote folder list
  syncthing_folder:
    path: "/{{ local_username.stdout }}/{{ item.split(':') | first | lower }}"
    id: "{{ item.split(':') | last }}"
    devices:
      - "{{ local_device_id.stdout }}"
  with_items: "{{ local_folders.stdout_lines }}"
  register: add_local_folders

- name: Restarting syncthing
  docker_container:
    name: syncthing
    state: started
    restart: yes
  when: add_local_folders.changed

- name: Setting device name
  xml:
    path: .local/etc/syncthing/config.xml
    xpath: "/configuration/device[@id=\"{{ remote_device_id.stdout }}\"]"
    attribute: name
    value: "{{ hostname }}"
  register: device_name

- name: Setting username for GUI authentication in config
  xml:
    path: .local/etc/syncthing/config.xml
    xpath: /configuration/gui/user
    state: present
    value: "{{ syncthing_username }}"
  register: st_username

- name: Setting password for GUI authentication in config
  xml:
    path: .local/etc/syncthing/config.xml
    xpath: /configuration/gui/password
    state: present
    value: "{{ syncthing_password_hash }}"
  register: st_password

- name: Restarting syncthing
  docker_container:
    name: syncthing
    state: started
    restart: yes
  when: device_name.changed or st_username.changed or st_password.changed
